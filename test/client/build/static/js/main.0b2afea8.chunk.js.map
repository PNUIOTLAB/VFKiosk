{"version":3,"sources":["components/Complete.js","components/Order_Table.js","components/Order_Add.js","App.js","reportWebVitals.js","index.js"],"names":["Complete","props","handleClickOpen","setState","open","handleClose","state","Order_Num","fetch","method","this","stateRefresh","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","Ordercomplete","React","Component","Order_Table","TableRow","TableCell","Take_Out","Order_List","Gender","Age","Cost","Time","Order_Add","handleFormSubmit","preventDefault","addCustomer","then","response","console","log","data","handleValueChange","nextState","target","name","value","formData","URLSearchParams","append","post","TextField","label","type","onChange","App","Order_Tables","completed","callApi","res","catch","err","a","json","body","progress","timer","setInterval","classes","className","root","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","title","noWrap","menu","Paper","paper","Table","table","TableHead","map","c","TableBody","colSpan","align","CircularProgress","withStyles","theme","width","minWidth","marginTop","marginBottom","display","justifyContent","marginLeft","marginRight","margin","spacing","fontSize","flexGrow","breakpoints","up","search","borderRadius","shape","backgroundColor","alpha","palette","common","white","searchIcon","padding","height","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","typography","fontFamily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2afea8.chunk.js","sourcesContent":["import React from 'react';\nimport { Dialog } from '@material-ui/core';\nimport { DialogActions } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogContent } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n\nclass Complete extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            open:false\n        }\n    }\n\n    handleClickOpen = () =>{\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () =>{\n        this.setState({\n            open: false\n        });\n    }\n\n    Ordercomplete(Order_Num){\n        const url = '/order/' + Order_Num;\n        fetch(url,{\n            method:'DELETE'\n        });\n        this.props.stateRefresh();\n    }\n    render(){\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>주문완료</Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                <DialogTitle onClose={this.handleClose}>\n                    완료 확인\n                </DialogTitle>\n                <DialogContent>\n                    <Typography gutterBottom>\n                        주문을 완료합니다.\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={(e)=>{this.Ordercomplete(this.props.Order_Num)}}>완료</Button>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default Complete","import React from 'react';\nimport { TableRow } from '@material-ui/core';\nimport { TableCell } from '@material-ui/core';\nimport Complete from './Complete';\nclass Order_Table extends React.Component{\n    render(){\n        return(\n            <TableRow>\n                <TableCell>{this.props.Order_Num}</TableCell>\n                <TableCell>{this.props.Take_Out}</TableCell>\n                <TableCell>{this.props.Order_List}</TableCell>\n                <TableCell>{this.props.Gender}</TableCell>\n                <TableCell>{this.props.Age}</TableCell>\n                <TableCell>{this.props.Cost}</TableCell>\n                <TableCell>{this.props.Time}</TableCell>\n                <TableCell><Complete stateRefresh={this.props.stateRefresh} Order_Num={this.props.Order_Num}/></TableCell>\n            </TableRow>\n        );\n    }\n}\n\nexport default Order_Table;","import React from 'react';\nimport {post} from 'axios';\nimport { Dialog } from '@material-ui/core';\nimport { DialogActions } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogContent } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n\nclass Order_Add extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            Order_Num:'',\n            Take_Out:'',\n            Order_List:'',\n            Gender:'',\n            Age:'',\n            Cost:'',\n            open: false\n        }\n    }\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault()\n        this.addCustomer()\n            .then((response) => {\n                console.log(response.data);\n                this.props.stateRefresh();\n            })\n        this.setState({\n            Order_Num:'',\n            Take_Out:'',\n            Order_List:'',\n            Gender:'',\n            Age:'',\n            Cost:'',\n            open: false\n        });\n        \n    } \n\n    handleValueChange = (e) =>{\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addCustomer = () =>{\n        const url = '/order';\n        const formData =  new URLSearchParams();\n        //const formData =  new FormData();\n        formData.append('Order_Num',this.state.Order_Num);\n        formData.append('Take_Out',this.state.Take_Out);\n        formData.append('Order_List',this.state.Order_List);\n        formData.append('Gender',this.state.Gender);\n        formData.append('Age',this.state.Age);\n        formData.append('Cost',this.state.Cost);\n        console.log(formData);\n        return post(url, formData);\n    }\n\n    handleClickOpen = () =>{\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () =>{\n        this.setState({\n            Order_Num:'',\n            Take_Out:'',\n            Order_List:'',\n            Gender:'',\n            Age:'',\n            Cost:'',\n            open: false\n        });\n    }\n\n    render(){\n       // const {classes} = this.props;\n        return(\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n                    주문하기\n                </Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>주문 추가</DialogTitle>\n                    <DialogContent>\n                        <TextField label=\"주문번호\" type=\"int\" name=\"Order_Num\" value={this.state.Order_Num} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"포장여부\" type=\"bool\" name=\"Take_Out\" value={this.state.Take_Out} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"주문내역\" type=\"text\" name=\"Order_List\" value={this.state.Order_List} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"성별\" type=\"text\" name=\"Gender\" value={this.state.Gender} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"나이\" type=\"int\" name=\"Age\" value={this.state.Age} onChange={this.handleValueChange}/><br/>\n                        <TextField label=\"금액\" type=\"int\" name=\"Cost\" value={this.state.Cost} onChange={this.handleValueChange}/><br/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\nexport default Order_Add;","import './App.css';\nimport React, {Component} from 'react';\nimport Order_Table from './components/Order_Table';\nimport { Paper } from '@material-ui/core';\nimport { Table } from '@material-ui/core';\nimport { TableHead } from '@material-ui/core';\nimport { TableBody } from '@material-ui/core';\nimport { TableRow } from '@material-ui/core';\nimport { TableCell } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Order_Add from './components/Order_Add';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { alpha } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = theme=> ({\n  root:{\n    width: '100%',\n    minWidth: 1080\n  },\n  menu:{\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  paper:{\n    marginLeft: 18,\n    marginRight: 18\n  },\n  progress:{\n    margin: theme.spacing(2)\n  },\n  TableHead:{\n    fontSize: '1.0rem'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n});\n\nclass App extends Component {\n\n constructor(props){\n   super(props);\n   this.state = {\n     Order_Tables: '',\n     completed: 0\n   }\n }\n\n stateRefresh = () =>{\n   this.setState({\n      Order_Tables:'',\n      completed: 0\n   });\n   this.callApi()\n    .then(res => this.setState({Order_Tables: res}))\n    .catch(err => console.log(err));\n  }\n\n  componentDidMount(){\n    this.timer = setInterval(this.progress, 100);\n    this.callApi()\n      .then(res => this.setState({Order_Tables: res}))\n      .catch(err => console.log(err))\n  }\n\n  callApi = async () =>{\n    const response = await fetch('/order');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () =>{\n    const {completed} = this.state;\n    this.setState({completed: completed >= 102 ? -10 : completed + 2});\n  }\n\n  render() {\n    const {classes} = this.props;\n    const cellList = [\"주문번호\",\"포장여부\",\"주문내역\",\"성별\",\"나이대\",\"금액\",\"시간\",\"설정\"]\n    return( \n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              주문관리 시스템\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.menu}>\n          <Order_Add stateRefresh={this.stateRefresh}/>\n        </div>\n        <Paper className={classes.paper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {cellList.map(c => {\n                  return <TableCell className={classes.TableHead}>{c}</TableCell>\n                })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.Order_Tables ? this.state.Order_Tables.map(c=>{\n                  return(\n                  <Order_Table stateRefresh = {this.stateRefresh}\n                    key={c.Order_Num}\n                    Order_Num={c.Order_Num}\n                    Take_Out={c.Take_Out}\n                    Order_List={c.Order_List}\n                    Gender={c.Gender}\n                    Age={c.Age}\n                    Cost={c.Cost}\n                    Time={c.Time}\n                  />);\n                }) : \n                <TableRow>\n                  <TableCell colSpan=\"8\" align=\"center\">\n                    <CircularProgress className={classes.progress} variant = \"determinate\" value={this.state.completed}/>\n                  </TableCell>\n                </TableRow>\n              } \n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    );\n  } \n}\n\nexport default withStyles(styles)(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {MuiThemeProvider, createTheme} from '@material-ui/core';\n\nconst theme = createTheme({\n  typography:{\n    fontFamily:`\"Noto Sans KR\", sans-serif`\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}